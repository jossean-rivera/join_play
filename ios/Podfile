platform :ios, '13.0'

# Disable CocoaPods analytics to reduce Flutter build latency
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Enable parallel code signing to speed up build times
ENV['COCOAPODS_PARALLEL_CODE_SIGN'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!  # If your project uses frameworks

  pod 'FirebaseAuth', :podspec => nil do
    spec = podspec
    spec.name = 'FirebaseAuth'
    spec.vendored_frameworks = './Frameworks/FirebaseAuth/FirebaseAuth.xcframework'
  end

  pod 'FirebaseCore', :podspec => nil do
    spec = podspec
    spec.name = 'FirebaseCore'
    spec.vendored_frameworks = './Frameworks/FirebaseAnalytics/FirebaseCore.xcframework'
  end

  pod 'FirebaseFirestore', :podspec => nil do
    spec = podspec
    spec.name = 'FirebaseFirestore'
    spec.vendored_frameworks = './Frameworks/FirebaseFirestore/FirebaseFirestore.xcframework'
  end
end


post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # Disable Bitcode to improve build speed
      config.build_settings['ENABLE_BITCODE'] = 'NO'
    end
    flutter_additional_ios_build_settings(target)
  end
end
